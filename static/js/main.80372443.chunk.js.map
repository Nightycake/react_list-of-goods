{"version":3,"sources":["App.tsx","index.tsx"],"names":["SortType","goodsFromServer","getReorderedGoods","goods","sortType","isReversed","visibleGoods","ALPHABET","sort","a","b","localeCompare","LENGTH","length","reverse","console","log","App","state","NONE","sortByAlphabet","setState","sortByLength","reset","this","className","type","onClick","map","good","React","Component","ReactDOM","render","document","getElementById"],"mappings":"iKAiBKA,E,wFAbQC,EAAkB,CAC7B,YACA,SACA,OACA,YACA,QACA,QACA,OACA,QACA,MACA,UAeK,SAASC,EACdC,EADK,GAGJ,IADCC,EACF,EADEA,SAAUC,EACZ,EADYA,WAGNC,EAAY,YAAOH,GAgBzB,OAdIC,IAAaJ,EAASO,SACxBD,EAAaE,MAAK,SAACC,EAAGC,GAAJ,OAAUD,EAAEE,cAAcD,MACnCN,IAAaJ,EAASY,QAC/BN,EAAaE,MAAK,SAACC,EAAGC,GAAJ,OAAUD,EAAEI,OAASH,EAAEG,UAGvCR,GACFC,EAAaQ,UAKfC,QAAQC,IAAIZ,EAAUC,GAEfC,G,SAjCJN,O,eAAAA,I,uBAAAA,I,oBAAAA,M,KA+CE,IAAMiB,EAAb,4MACEC,MAAQ,CACNb,YAAY,EACZD,SAAUJ,EAASmB,MAHvB,EAMEC,eAAiB,WACf,EAAKC,SAAS,CAAEjB,SAAUJ,EAASO,YAPvC,EAUEe,aAAe,WACb,EAAKD,SAAS,CAAEjB,SAAUJ,EAASY,UAXvC,EAcEE,QAAU,WACR,EAAKO,UAAS,SAACH,GACb,MAAO,CACLb,YAAaa,EAAMb,gBAjB3B,EAsBEkB,MAAQ,WACN,EAAKF,SAAS,CACZjB,SAAUJ,EAASmB,KACnBd,YAAY,KAzBlB,4CA6BE,WACE,MAAiCmB,KAAKN,MAA9Bd,EAAR,EAAQA,SAAUC,EAAlB,EAAkBA,WAElB,OACE,mCACE,sBAAKoB,UAAU,kBAAf,UACE,sBAAKA,UAAU,UAAf,UACE,wBACEC,KAAK,SACLD,UACErB,IAAaJ,EAASO,SAClB,iBACA,0BAENoB,QAASH,KAAKJ,eAPhB,iCAYA,wBACEM,KAAK,SACLD,UACErB,IAAaJ,EAASY,OAClB,iBACA,0BAENe,QAASH,KAAKF,aAPhB,4BAYA,wBACEI,KAAK,SACLD,WACiB,IAAfpB,EACI,iBACA,0BAENsB,QAASH,KAAKV,QAPhB,sBAWEV,IAAaJ,EAASmB,OAAuB,IAAfd,IAC9B,wBACEqB,KAAK,SACLD,UAAU,4BACVE,QAASH,KAAKD,MAHhB,sBAUJ,6BACE,6BACGrB,EAAkBD,EAAiB,CAAEG,WAAUC,eAAcuB,KAC5D,SAACC,GACC,OACE,oBAAoB,UAAQ,OAA5B,SACGA,GADH,UAAYA,oBAvFhC,GAAyBC,IAAMC,WC7D/BC,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.80372443.chunk.js","sourcesContent":["import React from 'react';\nimport 'bulma/css/bulma.css';\nimport './App.scss';\n\nexport const goodsFromServer = [\n  'Dumplings',\n  'Carrot',\n  'Eggs',\n  'Ice cream',\n  'Apple',\n  'Bread',\n  'Fish',\n  'Honey',\n  'Jam',\n  'Garlic',\n];\n\nenum SortType {\n  NONE,\n  ALPHABET,\n  LENGTH,\n}\n\ntype ReorderOptions = {\n  sortType: SortType;\n  isReversed: boolean;\n};\n\n// Use this function in the render method to prepare goods\nexport function getReorderedGoods(\n  goods: string[],\n  { sortType, isReversed }: ReorderOptions,\n) {\n  // To avoid the original array mutation\n  const visibleGoods = [...goods];\n\n  if (sortType === SortType.ALPHABET) {\n    visibleGoods.sort((a, b) => a.localeCompare(b));\n  } else if (sortType === SortType.LENGTH) {\n    visibleGoods.sort((a, b) => a.length - b.length);\n  }\n\n  if (isReversed) {\n    visibleGoods.reverse();\n  }\n\n  // Sort and reverse goods if needed\n  // eslint-disable-next-line no-console\n  console.log(sortType, isReversed);\n\n  return visibleGoods;\n}\n\n// DON'T save goods to the state\n// type State = {\n//   isReversed: boolean,\n//   sortType: SortType,\n// };\n\ntype State = {\n  isReversed: boolean;\n  sortType: SortType;\n};\n\nexport class App extends React.Component<{}, State> {\n  state = {\n    isReversed: false,\n    sortType: SortType.NONE,\n  };\n\n  sortByAlphabet = () => {\n    this.setState({ sortType: SortType.ALPHABET });\n  };\n\n  sortByLength = () => {\n    this.setState({ sortType: SortType.LENGTH });\n  };\n\n  reverse = () => {\n    this.setState((state) => {\n      return {\n        isReversed: !state.isReversed,\n      };\n    });\n  };\n\n  reset = () => {\n    this.setState({\n      sortType: SortType.NONE,\n      isReversed: false,\n    });\n  };\n\n  render() {\n    const { sortType, isReversed } = this.state;\n\n    return (\n      <>\n        <div className=\"section content\">\n          <div className=\"buttons\">\n            <button\n              type=\"button\"\n              className={\n                sortType === SortType.ALPHABET\n                  ? 'button is-info'\n                  : 'button is-info is-light'\n              }\n              onClick={this.sortByAlphabet}\n            >\n              Sort alphabetically\n            </button>\n\n            <button\n              type=\"button\"\n              className={\n                sortType === SortType.LENGTH\n                  ? 'button is-info'\n                  : 'button is-info is-light'\n              }\n              onClick={this.sortByLength}\n            >\n              Sort by length\n            </button>\n\n            <button\n              type=\"button\"\n              className={\n                isReversed === true\n                  ? 'button is-info'\n                  : 'button is-info is-light'\n              }\n              onClick={this.reverse}\n            >\n              Reverse\n            </button>\n            {(sortType !== SortType.NONE || isReversed === true) && (\n              <button\n                type=\"button\"\n                className=\"button is-danger is-light\"\n                onClick={this.reset}\n              >\n                Reset\n              </button>\n            )}\n          </div>\n\n          <ul>\n            <ul>\n              {getReorderedGoods(goodsFromServer, { sortType, isReversed }).map(\n                (good) => {\n                  return (\n                    <li key={`${good}`} data-cy=\"Good\">\n                      {good}\n                    </li>\n                  );\n                },\n              )}\n            </ul>\n          </ul>\n        </div>\n      </>\n    );\n  }\n}\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}